{"version":3,"sources":["components/Form/Form.js","components/Form/Form.module.scss","components/Form/Input.js","components/Form/Input.module.scss","hooks/use-form.js","pages/Profile.module.scss","pages/Profile.js"],"names":["Form","props","className","classes","children","module","exports","Input","inputvalid","istouched","isvalid","JSON","parse","isValid","elementconfig","htmlFor","id","label","border","Select","inputGroup","checked","Radio","display","invalid","useForm","inputType","useState","inputData","dispatch","setIsValid","errorMessage","setErrorMessage","touched","setTouched","regex","inputChangeHandler","event","target","value","test","length","inputBlurHandler","Profile","passwordReset","setPasswordReset","passwordHandler","passwordBlur","passwordData","passwordValid","passwordError","passwordTouched","token","useSelector","state","auth","changedPassword","setChangePassword","ProfileHeader","changePasswordDiv","registerLogin","onClick","onSubmit","preventDefault","toString","required","onBlur","onChange","axios","post","process","idToken","password","returnSecureToken","Headers","then","res","catch","err"],"mappings":"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","file":"static/js/8.b97f0255.chunk.js","sourcesContent":["import React from 'react'\r\nimport classes from './Form.module.scss'\r\nconst Form = props => {\r\n    return (\r\n        <div className={`${classes.Form} ${props.className}`} {...props}>\r\n           {props.children} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__1lAKg\"};","import React, { Fragment } from 'react'\r\nimport classes from './Input.module.scss'\r\n\r\nconst Input = props => {\r\n\r\nlet inputvalid = ''\r\nlet istouched = '' \r\nlet isvalid = '' \r\n\r\nif(props.istouched){\r\nistouched = JSON.parse(props.istouched)\r\n}\r\n\r\nif(props.isvalid){\r\n    isvalid = JSON.parse(props.isvalid)\r\n    }\r\n    \r\nif(istouched && isvalid){\r\n    inputvalid = classes.isValid\r\n}\r\n\r\nswitch (props.elementconfig) {\r\n    case 'text':\r\n        return(\r\n            \r\n\r\n\r\n<Fragment>\r\n                <label htmlFor={props.id}>{props.label}</label>\r\n                <input\r\n            {...props}\r\n            className={`${classes.Input} ${props.className } ${props.border ? classes[props.border] : null}`}\r\n            \r\n            />\r\n            </Fragment>\r\n\r\n        )\r\n     \r\n        case 'select':\r\n        return(\r\n            <Fragment>\r\n                <label htmlFor={props.id}>{props.label}</label>\r\n            <select \r\n            \r\n            {...props}\r\n            \r\n            className={`${classes.Select} ${props.className}`}>\r\n                {props.children}\r\n                   \r\n            </select>\r\n            </Fragment>\r\n           \r\n        )\r\n        case 'radio':\r\n            return(\r\n\r\n\r\n               <div className={classes.inputGroup}>\r\n<label htmlFor={props.id}>{props.label}</label>\r\n         \r\n         <input \r\n         checked={props.checked}\r\n     {...props}\r\n     className={`${classes.Radio}  ${props.className } ${props.border ? classes[props.border] : null}`}\r\n     \r\n     />\r\n               </div>\r\n                \r\n            \r\n\r\n\r\n\r\n            )\r\n\r\n    default:\r\n        return (\r\n            <Fragment>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n     \r\n            <input\r\n            \r\n        {...props}\r\n        className={`${classes.Input} ${props.className}  ${classes[props.display]} ${!isvalid && classes.invalid} ${ inputvalid}`}\r\n        \r\n        />\r\n        </Fragment>\r\n        )   \r\n            \r\n        }\r\n   \r\n}\r\n\r\nexport default Input\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Input_Select__JLRNQ\",\"Radio\":\"Input_Radio__lNqkj\",\"invalid\":\"Input_invalid__-pKCl\",\"isValid\":\"Input_isValid__2kmUt\",\"block\":\"Input_block__hA0V9\",\"gray\":\"Input_gray__2h8xF\",\"none\":\"Input_none__2hCxO\",\"inputGroup\":\"Input_inputGroup__3SBRM\"};","import  { useState } from \"react\"\r\n\r\n\r\n\r\nexport const useForm = (inputType) => {\r\n\r\n    const [inputData, dispatch] = useState('')\r\n    const [isValid, setIsValid] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [touched, setTouched] = useState(false)\r\n\r\n    let regex =  /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    const inputBlurHandler = (event) => {\r\n        \r\n        switch (inputType) {\r\n            case 'email':\r\n                if( !regex.test(event.target.value)){\r\n                    setIsValid(false)\r\n                    setErrorMessage('Please enter a valid email')\r\n                    \r\n                }\r\n                break;\r\n                case 'username':\r\n                    if(event.target.value.length < 1){\r\n                        setIsValid(false)\r\n                    setErrorMessage('Username cannot be Empty')\r\n                    }\r\n                    break;\r\n                    case 'password':\r\n                    if(event.target.value.length < 6){\r\n                        setIsValid(false)\r\n                    setErrorMessage('Password must be longer than 6 characters')\r\n                    }\r\n                    break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\nconst inputChangeHandler = (event) => {\r\n    setTouched(true)\r\n    dispatch(event.target.value)\r\n\r\n    switch (inputType) {\r\n        case 'email':\r\n            if( touched && regex.test(event.target.value)){\r\n                setIsValid(true)\r\n                setErrorMessage('')   \r\n            }  \r\n            break;\r\n            case 'username':\r\n                if( touched && event.target.value.length > 1){\r\n                    setIsValid(true)\r\n                    setErrorMessage('')\r\n                }\r\n                break;\r\n                case 'password':\r\n                if(touched && event.target.value.length >=6 ){\r\n                    setIsValid(true)\r\n                    setErrorMessage('')\r\n                }\r\n                break;\r\n        default:\r\n            break;\r\n    }\r\n  \r\n}\r\n\r\n    return {\r\ninputChangeHandler,\r\ninputData,\r\nisValid,\r\ninputBlurHandler,\r\nerrorMessage,\r\ntouched\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3Kg-E\",\"ProfileHeader\":\"Profile_ProfileHeader__1rty6\",\"registerLogin\":\"Profile_registerLogin__18wY3\",\"errorMessage\":\"Profile_errorMessage__62UD1\"};","import React, { useState } from 'react'\nimport Input from '../components/Form/Input'\nimport { useForm } from '../hooks/use-form'\nimport classes from './Profile.module.scss'\nimport Button from '../components/UI/Button'\nimport Form from '../components/Form/Form'\nimport axios from 'axios'\nimport { useSelector } from 'react-redux'\n\nconst Profile = () => {\n    const [passwordReset, setPasswordReset] = useState(false)\n\n    const {inputChangeHandler: passwordHandler, inputBlurHandler: passwordBlur, \n        inputData: passwordData, isValid: passwordValid, errorMessage: passwordError,touched: passwordTouched} = useForm('password')\n\n        const {token} = useSelector(state => state.auth)\nconst [changedPassword, setChangePassword] = useState(true)\n\n\n\nconst submit = (event) => {\nevent.preventDefault()\n}\n\nconst changePassword = () => {\n    setChangePassword(false)\n}\n\nconst submitFormHandler = () => {\nif(passwordTouched && passwordValid){\n\n    const apiKey = process.env.REACT_APP_FIREBASEE_KEY\n\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${apiKey}`,{\n        idToken: token ,\n        password: passwordData,\n        returnSecureToken: true,\n        Headers:{\n            'Content-Type': 'application/json'\n        } \n    })\n    .then(res => {\n       \n\n        setPasswordReset(true)\n        setChangePassword(true)\n    })\n    .catch(err => {\n     \n\n        setPasswordReset(false)\n    })\n\n}\n\n}\n\n\n\n    return (\n        <div >\n\n            <h4 className={classes.ProfileHeader} >Welcome back User </h4>\n<div className={classes.Profile}>\n    {changedPassword && <div className={classes.changePasswordDiv} ><p>You can change your password here. </p>\n            \n    {passwordReset && <p className={classes.registerLogin}> Password Changed</p>}\n\n            <Button onClick={changePassword}>Change Password</Button></div> }\n\n{!changedPassword && <Form onSubmit={submit}>\n        \n        <Input istouched={passwordTouched.toString()}  isvalid={passwordValid.toString()} required onBlur={passwordBlur} onChange={passwordHandler} value={passwordData} display='block' label='New Password' />\n        <p className={classes.errorMessage}>{passwordError}</p>\n\n     \n\n     <Button onClick={submitFormHandler} className='fullWidth'>Reset Password</Button>\n    \n         </Form>}\n            \n            \n            \n            \n        </div>\n        </div>\n    )\n}\n\nexport default Profile\n"],"sourceRoot":""}