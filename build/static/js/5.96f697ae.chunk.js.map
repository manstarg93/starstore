{"version":3,"sources":["components/Form/Form.js","components/Form/Form.module.scss","components/Form/Input.js","components/Form/Input.module.scss","components/UI/Wrapper.js","components/UI/Wrapper.module.scss","components/products/SelectedProduct.js","pages/ProductDetails.js"],"names":["Form","props","className","classes","children","module","exports","Input","inputvalid","istouched","isvalid","JSON","parse","isValid","elementconfig","htmlFor","id","label","border","Select","inputGroup","checked","Radio","display","invalid","Wrapper","SelectedProduct","selectedProduct","products","dispatch","useDispatch","myCart","useSelector","state","cart","cartItems","useState","isAdded","setIsAdded","useEffect","currentProductIndex","findIndex","product","currentCart","quantity","dispatchQuantity","Row","Col","md","Card","boxShadow","Key","Products","src","image","alt","productDetails","title","description","style","fontWeight","price","onChange","event","preventDefault","parseInt","target","value","name","Button","disabled","onClick","totalItemPrice","cartActions","addProduct","submitProduct","color","ProductDetails","params","useParams","getSelectedProductSlice","loading","errorMessage","Loading"],"mappings":"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","file":"static/js/5.96f697ae.chunk.js","sourcesContent":["import React from 'react'\r\nimport classes from './Form.module.scss'\r\nconst Form = props => {\r\n    return (\r\n        <div className={`${classes.Form} ${props.className}`} {...props}>\r\n           {props.children} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__1lAKg\"};","import React, { Fragment } from 'react'\r\nimport classes from './Input.module.scss'\r\n\r\nconst Input = props => {\r\n\r\nlet inputvalid = ''\r\nlet istouched = '' \r\nlet isvalid = '' \r\n\r\nif(props.istouched){\r\nistouched = JSON.parse(props.istouched)\r\n}\r\n\r\nif(props.isvalid){\r\n    isvalid = JSON.parse(props.isvalid)\r\n    }\r\n    \r\nif(istouched && isvalid){\r\n    inputvalid = classes.isValid\r\n}\r\n\r\nswitch (props.elementconfig) {\r\n    case 'text':\r\n        return(\r\n            \r\n\r\n\r\n<Fragment>\r\n                <label htmlFor={props.id}>{props.label}</label>\r\n                <input\r\n            {...props}\r\n            className={`${classes.Input} ${props.className } ${props.border ? classes[props.border] : null}`}\r\n            \r\n            />\r\n            </Fragment>\r\n\r\n        )\r\n     \r\n        case 'select':\r\n        return(\r\n            <Fragment>\r\n                <label htmlFor={props.id}>{props.label}</label>\r\n            <select \r\n            \r\n            {...props}\r\n            \r\n            className={`${classes.Select} ${props.className}`}>\r\n                {props.children}\r\n                   \r\n            </select>\r\n            </Fragment>\r\n           \r\n        )\r\n        case 'radio':\r\n            return(\r\n\r\n\r\n               <div className={classes.inputGroup}>\r\n<label htmlFor={props.id}>{props.label}</label>\r\n         \r\n         <input \r\n         checked={props.checked}\r\n     {...props}\r\n     className={`${classes.Radio}  ${props.className } ${props.border ? classes[props.border] : null}`}\r\n     \r\n     />\r\n               </div>\r\n                \r\n            \r\n\r\n\r\n\r\n            )\r\n\r\n    default:\r\n        return (\r\n            <Fragment>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n     \r\n            <input\r\n            \r\n        {...props}\r\n        className={`${classes.Input} ${props.className}  ${classes[props.display]} ${!isvalid && classes.invalid} ${ inputvalid}`}\r\n        \r\n        />\r\n        </Fragment>\r\n        )   \r\n            \r\n        }\r\n   \r\n}\r\n\r\nexport default Input\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Input_Select__JLRNQ\",\"Radio\":\"Input_Radio__lNqkj\",\"invalid\":\"Input_invalid__-pKCl\",\"isValid\":\"Input_isValid__2kmUt\",\"block\":\"Input_block__hA0V9\",\"gray\":\"Input_gray__2h8xF\",\"none\":\"Input_none__2hCxO\",\"inputGroup\":\"Input_inputGroup__3SBRM\"};","import React from 'react'\r\nimport classes from './Wrapper.module.scss'\r\n\r\nconst Wrapper = props => {\r\n    return (\r\n        <div className={`${classes.Wrapper} ${props.className}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Wrapper_Wrapper__osQuG\"};","import React, { useEffect, useState } from 'react'\nimport Form from '../Form/Form'\nimport Input from '../Form/Input'\nimport classes from './SelectedProduct.module.scss'\nimport Button from '../UI/Button'\nimport Card from '../UI/Card'\nimport { Col, Row } from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { cartActions } from '../../store/cartSlice'\nconst SelectedProduct = props => {\n   const selectedProduct = props.products\n   const dispatch = useDispatch()\n\n   const {cartItems: myCart} = useSelector(state => state.cart)\n\n   const [isAdded, setIsAdded] = useState(false)\n\n    useEffect(() => {\n        let currentProductIndex = myCart.findIndex(product => product.id === selectedProduct.id)\n        const currentCart = myCart[currentProductIndex]\n        \n        if(currentCart){\n     \n                setIsAdded(true)   \n        }\n        else{\n            setIsAdded(false)\n        }\n    }, [selectedProduct,myCart])\n\n\nconst [quantity, dispatchQuantity] = useState(1);\n\nconst qtySelectHandler = event => {\n\n    dispatchQuantity(parseInt(event.target.value))\n}\n\n\n   const formHandler = (event) => {\nevent.preventDefault()\n   }\n\n   const submitProduct = (id,title,price,quantity) => {\n     \nconst cartItems = {\n    id,\n    title,\n    price,\n    quantity,\n    totalItemPrice: price * quantity\n}\n\n    dispatch(cartActions.addProduct(cartItems))  \n\n   }\n    return (\n        <Row className='centeredRow'>\n            <Col md='3'>\n    <Card boxShadow='none' Key={selectedProduct.id}  className={classes.Products} >\n<img src={selectedProduct.image} alt={selectedProduct.id}/>\n    </Card>\n    </Col>\n    <Col md='6' className={classes.productDetails} >\n    <h5>{selectedProduct.title}</h5>\n\n    \n    <p>{selectedProduct.description}</p>\n    <p style={{fontWeight\n    : 'bolder'}}>${selectedProduct.price}</p>\n    <div>\n    <Form onChange={formHandler}>\n                <Input onChange={qtySelectHandler} label='Select Quantity'  id='productsQuantity' name='productsQuantity' elementconfig='select'>\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                </Input>\n                \n                \n            </Form>\n            <Button disabled={isAdded} onClick={() => submitProduct(selectedProduct.id, selectedProduct.title, selectedProduct.price, quantity\n                )}>Add to cart</Button>\n                <p style={{color: 'red'}}>{isAdded && ' Product in cart'}</p>\n\n</div>\n\n   \n   \n    </Col>\n        </Row>\n    )\n}\n\nexport default SelectedProduct\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport { getSelectedProductSlice } from '../store/selectedProductSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Wrapper from '../components/UI/Wrapper'\r\nimport SelectedProduct from '../components/products/SelectedProduct'\r\nimport Loading from '../components/UI/Loading'\r\n\r\n\r\n\r\nconst ProductDetails = () => {\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    useEffect(() => {\r\n        dispatch(getSelectedProductSlice(params.productDetails))\r\n\r\n    },[dispatch, params])\r\n    \r\n    const {selectedProduct,loading,errorMessage} = useSelector(state => state.selectedProduct)\r\n    let selectedProductDiv = ''\r\n\r\n    if(loading){\r\n        selectedProductDiv = <Loading/>  \r\n    }\r\n    else if(!loading && errorMessage !== null){\r\n        selectedProductDiv = <p>{errorMessage}</p>  \r\n    }\r\n\r\n    else{\r\n       selectedProductDiv = <Wrapper><SelectedProduct products={selectedProduct}/></Wrapper>\r\n    }\r\n\r\n    return selectedProductDiv\r\n    \r\n}\r\n\r\nexport default ProductDetails\r\n\r\n"],"sourceRoot":""}